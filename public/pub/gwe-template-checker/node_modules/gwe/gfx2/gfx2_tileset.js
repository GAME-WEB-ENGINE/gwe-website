import { textureManager } from "../texture/texture_manager";

export class GfxTileset {
  private textureWidth: number;
  private textureHeight: number;
  private tileWidth: number;
  private tileHeight: number;
  private columns: number;
  private texture: HTMLImageElement;

  constructor() {
    this.textureWidth = 0;
    this.textureHeight = 0;
    this.tileWidth = 0;
    this.tileHeight = 0;
    this.columns = 0;
    this.texture = textureManager.getDefaultTexture();
  }

  async loadFromData(data: any): Promise<void> {
    this.textureHeight = parseInt(data['TextureHeight']);
    this.textureWidth = parseInt(data['TextureWidth']);
    this.tileWidth = parseInt(data['TileWidth']);
    this.tileHeight = parseInt(data['TileHeight']);
    this.columns = parseInt(data['Columns']);
    this.texture = await textureManager.loadTexture(data['TextureFile']);
  }

  getTilePosition(tileId: number): Array<number> {
    const x = ((tileId - 1) % this.columns) * this.tileWidth;
    const y = Math.floor((tileId - 1) / this.columns) * this.tileHeight;
    return [x, y];
  }

  getTexture(): HTMLImageElement {
    return this.texture;
  }

  getColumn(): number {
    return this.columns;
  }

  getTileHeight(): number {
    return this.tileHeight;
  }

  getTileWidth(): number {
    return this.tileWidth;
  }

  getTextureHeight(): number {
    return this.textureHeight;
  }

  getTexturewidth(): number {
    return this.textureWidth;
  }
}