let { gfx2Manager } = require('./gfx2_manager');

class Gfx2Drawable {
  constructor() {
    this.position = [0, 0];
    this.offset = [0, 0];
    this.rotation = 0;
    this.visible = true;
  }

  setPosition(position) {
    this.position = position;
  }

  setOffset(offset) {
    this.offset = offset;
  }

  setRotation(rotation) {
    this.rotation = rotation;
  }

  setVisible(visible) {
    this.visible = visible;
  }

  getPosition() {
    return this.position;
  }

  getOffset() {
    return this.offset;
  }

  getRotation() {
    return this.rotation;
  }

  isVisible() {
    return this.visible;
  }

  update(ts) {
    this.onUpdate(ts);
  }

  draw(timeStep: number): void {
    if (!this.visible) {
      return;
    }

    const ctx = gfxManager.getContext();

    ctx.save();
    ctx.translate(this.offset[0], this.offset[1]);
    ctx.translate(this.position[0], this.position[1]);
    ctx.rotate(this.rotation);
    this.onDraw(timeStep);
    ctx.restore();
  }

  onUpdate(timeStep: number): void {
    // virtual method
  }

  onDraw(timeStep: number): void {
    // virtual method
  }
}

module.exports.Gfx2Drawable = Gfx2Drawable;